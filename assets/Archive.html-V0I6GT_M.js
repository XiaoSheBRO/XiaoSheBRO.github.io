import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as n,j as l,o as e}from"./app-Bxtc_AZx.js";const p={};function o(t,s){return e(),n("div",null,s[0]||(s[0]=[l(`<h1 id="归档" tabindex="-1"><a class="header-anchor" href="#归档"><span>归档</span></a></h1><h2 id="vue3-vant4-函数式样式" tabindex="-1"><a class="header-anchor" href="#vue3-vant4-函数式样式"><span>(Vue3) Vant4: 函数式样式</span></a></h2><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code><span class="line"><span style="color:#7B7F8B;">// 在组件或 main.js 中引入相关样式</span></span>
<span class="line"><span style="color:#F286C4;">import</span><span style="color:#DEE492;"> &#39;</span><span style="color:#E7EE98;">vant/es/toast/style/index</span><span style="color:#DEE492;">&#39;</span></span></code></pre></div><h2 id="vue3-element-plus-分页器新写法" tabindex="-1"><a class="header-anchor" href="#vue3-element-plus-分页器新写法"><span>(Vue3) element-plus 分页器新写法</span></a></h2><div class="language-html" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code><span class="line"><span style="color:#F6F6F4;">&lt;</span><span style="color:#F286C4;">el-pagination</span></span>
<span class="line"><span style="color:#62E884;font-style:italic;">  v-model:page-size</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">meta.perPage</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#62E884;font-style:italic;">  v-model:current-page</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">meta.currentPage</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#62E884;font-style:italic;">  :total</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">meta.totalCount</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#62E884;font-style:italic;">  :page-sizes</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">[meta.perPage, 20, 50, 100, 200]</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#62E884;font-style:italic;">  background</span></span>
<span class="line"><span style="color:#62E884;font-style:italic;">  layout</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">-&gt;, total, sizes, prev, pager, next, jumper</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#62E884;font-style:italic;">  @update:current-page</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">fetchTable</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#62E884;font-style:italic;">  @update:page-size</span><span style="color:#F286C4;">=</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">fetchTable</span><span style="color:#DEE492;">&quot;</span></span>
<span class="line"><span style="color:#F6F6F4;">/&gt;</span></span></code></pre></div><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> searchForm </span><span style="color:#F286C4;">=</span><span style="color:#62E884;"> ref</span><span style="color:#F6F6F4;">({})</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> searchFormDefault </span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;"> JSON</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">stringify</span><span style="color:#F6F6F4;">(searchForm.value)</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> meta </span><span style="color:#F286C4;">=</span><span style="color:#62E884;"> ref</span><span style="color:#F6F6F4;">({</span></span>
<span class="line"><span style="color:#F6F6F4;">  currentPage</span><span style="color:#F286C4;">:</span><span style="color:#BF9EEE;"> 1</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  perPage</span><span style="color:#F286C4;">:</span><span style="color:#BF9EEE;"> 10</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  totalCount</span><span style="color:#F286C4;">:</span><span style="color:#BF9EEE;"> 0</span><span style="color:#F6F6F4;">,</span></span>
<span class="line"><span style="color:#F6F6F4;">  pageCount</span><span style="color:#F286C4;">:</span><span style="color:#BF9EEE;"> 0</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> metaDefault </span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;"> JSON</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">stringify</span><span style="color:#F6F6F4;">(meta.value)</span></span>
<span class="line"><span style="color:#7B7F8B;">// list</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> tableData </span><span style="color:#F286C4;">=</span><span style="color:#62E884;"> ref</span><span style="color:#F6F6F4;">([])</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#62E884;"> fetchTable</span><span style="color:#F286C4;"> =</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F286C4;">  const</span><span style="color:#F6F6F4;"> params </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F286C4;">    ...</span><span style="color:#F6F6F4;">searchForm.value,</span></span>
<span class="line"><span style="color:#F6F6F4;">    currentPage</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> meta.value.currentPage,</span></span>
<span class="line"><span style="color:#F6F6F4;">    perPage</span><span style="color:#F286C4;">:</span><span style="color:#F6F6F4;"> meta.value.perPage</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#62E884;">  getTableList</span><span style="color:#F6F6F4;">(params).</span><span style="color:#62E884;">then</span><span style="color:#F6F6F4;">((</span><span style="color:#FFB86C;font-style:italic;">res</span><span style="color:#F6F6F4;">) </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">    tableData.value </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> res.data.list</span></span>
<span class="line"><span style="color:#F6F6F4;">    meta.value.totalCount </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> res.data.totalCount</span></span>
<span class="line"><span style="color:#F6F6F4;">    meta.value.pageCount </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> res.data.pageCount</span></span>
<span class="line"><span style="color:#F6F6F4;">  })</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#7B7F8B;">// search</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#62E884;"> handleSearch</span><span style="color:#F286C4;"> =</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  meta.value.currentPage </span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;"> 1</span></span>
<span class="line"><span style="color:#62E884;">  fetchTable</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#62E884;"> handleReset</span><span style="color:#F286C4;"> =</span><span style="color:#F6F6F4;"> () </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">  searchForm.value </span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;"> JSON</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">parse</span><span style="color:#F6F6F4;">(searchFormDefault)</span></span>
<span class="line"><span style="color:#F6F6F4;">  meta.value </span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;"> JSON</span><span style="color:#F6F6F4;">.</span><span style="color:#62E884;">parse</span><span style="color:#F6F6F4;">(metaDefault)</span></span>
<span class="line"><span style="color:#62E884;">  fetchTable</span><span style="color:#F6F6F4;">()</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre></div><h2 id="vue3-v-deep-弃用后的新写法" tabindex="-1"><a class="header-anchor" href="#vue3-v-deep-弃用后的新写法"><span>(Vue3) <code>:v-deep</code> 弃用后的新写法</span></a></h2><div class="language-css" data-highlighter="shiki" data-ext="css" data-title="css" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code><span class="line"><span style="color:#F286C4;">:deep(</span><span style="color:#62E884;font-style:italic;">.class-name</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#7B7F8B;">  /* ... */</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre></div>`,8)]))}const F=a(p,[["render",o],["__file","Archive.html.vue"]]),y=JSON.parse(`{"path":"/docs/learning/Archive.html","title":"归档","lang":"zh-CN","frontmatter":{"description":"归档 (Vue3) Vant4: 函数式样式 (Vue3) element-plus 分页器新写法 (Vue3) :v-deep 弃用后的新写法","head":[["meta",{"property":"og:url","content":"https://XiaoSheBRO.github.io/docs/learning/Archive.html"}],["meta",{"property":"og:site_name","content":"Shaw's Book"}],["meta",{"property":"og:title","content":"归档"}],["meta",{"property":"og:description","content":"归档 (Vue3) Vant4: 函数式样式 (Vue3) element-plus 分页器新写法 (Vue3) :v-deep 弃用后的新写法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"归档\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoSheBRO\\"}]}"]]},"git":{},"readingTime":{"minutes":0.77,"words":153},"filePathRelative":"docs/learning/Archive.md","autoDesc":true,"excerpt":"\\n<h2>(Vue3) Vant4: 函数式样式</h2>\\n<div class=\\"language-js\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"background-color:#282A36;color:#f6f6f4\\"><pre class=\\"shiki dracula-soft vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#7B7F8B\\">// 在组件或 main.js 中引入相关样式</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F286C4\\">import</span><span style=\\"color:#DEE492\\"> '</span><span style=\\"color:#E7EE98\\">vant/es/toast/style/index</span><span style=\\"color:#DEE492\\">'</span></span></code></pre>\\n</div>"}`);export{F as comp,y as data};
