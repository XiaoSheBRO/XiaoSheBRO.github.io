import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,e,o}from"./app-BIBsZUwS.js";const p={};function l(t,s){return o(),n("div",null,s[0]||(s[0]=[e(`<h1 id="vue3-x" tabindex="-1"><a class="header-anchor" href="#vue3-x"><span>Vue3.x</span></a></h1><h2 id="搭建" tabindex="-1"><a class="header-anchor" href="#搭建"><span>搭建</span></a></h2><h2 id="模板语法" tabindex="-1"><a class="header-anchor" href="#模板语法"><span>模板语法</span></a></h2><p><code>v-text</code> 绑定文本<br><code>v-for = &quot;item,index in list&quot;</code></p><h2 id="生命周期" tabindex="-1"><a class="header-anchor" href="#生命周期"><span>生命周期</span></a></h2><p>beforeCreate 没有数据，方法<br> created 有数据，方法，没挂载-无 dom<br> beforeMount 有数据，方法，没挂载-无 dom<br> mounted 有数据，有 dom</p><h2 id="自定义指令-v-name" tabindex="-1"><a class="header-anchor" href="#自定义指令-v-name"><span>自定义指令 <code>v-name</code></span></a></h2><div class="language-js" data-highlighter="shiki" data-ext="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code><span class="line"><span style="color:#F6F6F4;">app.</span><span style="color:#62E884;">directive</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&quot;</span><span style="color:#E7EE98;">name</span><span style="color:#DEE492;">&quot;</span><span style="color:#F6F6F4;">, {</span></span>
<span class="line"><span style="color:#62E884;">  生命周期函数</span><span style="color:#F6F6F4;">(</span><span style="color:#FFB86C;font-style:italic;">原生dom节点</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F286C4;">    ...</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre></div><h2 id="组件化和模块化" tabindex="-1"><a class="header-anchor" href="#组件化和模块化"><span>组件化和模块化</span></a></h2><p>组件 - 页面拆分<br> 模块 - 功能拆分</p><h2 id="动态组件" tabindex="-1"><a class="header-anchor" href="#动态组件"><span>动态组件</span></a></h2><p><code>&lt;component is = &quot;*&quot;&gt;&lt;/component&gt;</code></p><h2 id="option-api-选项-api" tabindex="-1"><a class="header-anchor" href="#option-api-选项-api"><span>option api 选项 api</span></a></h2><h2 id="composition-api-组合-api" tabindex="-1"><a class="header-anchor" href="#composition-api-组合-api"><span>composition api 组合 api</span></a></h2><div class="language-js" data-highlighter="shiki" data-ext="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code><span class="line"><span style="color:#F286C4;">export</span><span style="color:#F286C4;"> default</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#62E884;">  setup</span><span style="color:#F6F6F4;">() {</span></span>
<span class="line"><span style="color:#7B7F8B;">    // 定义数据、函数</span></span>
<span class="line"><span style="color:#F286C4;">    return</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#7B7F8B;">      // 暴露数据、函数</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre></div><h3 id="响应式" tabindex="-1"><a class="header-anchor" href="#响应式"><span>响应式</span></a></h3><p><code>import {ref, reactive } from &quot;vue&quot;</code><br><code>ref()</code> 转变字符串<br><code>reactive()</code> 转变对象</p><div class="language-js" data-highlighter="shiki" data-ext="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code><span class="line"><span style="color:#F286C4;">import</span><span style="color:#F6F6F4;"> { ref, reactive } </span><span style="color:#F286C4;">from</span><span style="color:#DEE492;"> &#39;</span><span style="color:#E7EE98;">vue</span><span style="color:#DEE492;">&#39;</span></span>
<span class="line"><span style="color:#F286C4;">let</span><span style="color:#F6F6F4;"> x </span><span style="color:#F286C4;">=</span><span style="color:#62E884;"> ref</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">0</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">) </span><span style="color:#7B7F8B;">// 转为响应式变量</span></span>
<span class="line"><span style="color:#F6F6F4;">x.value </span><span style="color:#F286C4;">=</span><span style="color:#DEE492;"> &#39;</span><span style="color:#E7EE98;">1</span><span style="color:#DEE492;">&#39;</span><span style="color:#7B7F8B;"> // 改变值</span></span>
<span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> y </span><span style="color:#F286C4;">=</span><span style="color:#62E884;"> reactive</span><span style="color:#F6F6F4;">({ id</span><span style="color:#F286C4;">:</span><span style="color:#BF9EEE;"> 1</span><span style="color:#F6F6F4;">, name</span><span style="color:#F286C4;">:</span><span style="color:#DEE492;"> &#39;</span><span style="color:#E7EE98;">1</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;"> })</span></span>
<span class="line"><span style="color:#F6F6F4;">y.name </span><span style="color:#F286C4;">=</span><span style="color:#DEE492;"> &#39;</span><span style="color:#E7EE98;">2</span><span style="color:#DEE492;">&#39;</span></span></code></pre></div><h3 id="生命周期钩子" tabindex="-1"><a class="header-anchor" href="#生命周期钩子"><span>生命周期钩子</span></a></h3><p><code>import {} from &quot;vue&quot;</code></p><p><s><code>beforeCreate</code> <code>created</code></s> 被<code>setup</code>代替(<em>setup 运行时机</em>)</p><p>其他加<code>on</code>前缀</p><div class="language-js" data-highlighter="shiki" data-ext="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code><span class="line"><span style="color:#62E884;">onMounted</span><span style="color:#F6F6F4;">(() </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F6F6F4;">}),</span></span></code></pre></div><h3 id="计算属性" tabindex="-1"><a class="header-anchor" href="#计算属性"><span>计算属性</span></a></h3><p><code>import {computed} from &quot;vue&quot;</code></p><div class="language-js" data-highlighter="shiki" data-ext="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code><span class="line"><span style="color:#F286C4;">const</span><span style="color:#F6F6F4;"> number </span><span style="color:#F286C4;">=</span><span style="color:#62E884;"> computed</span><span style="color:#F6F6F4;">(() </span><span style="color:#F286C4;">=&gt;</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F286C4;">  return</span><span style="color:#F6F6F4;"> number </span><span style="color:#F286C4;">+</span><span style="color:#BF9EEE;"> 1</span></span>
<span class="line"><span style="color:#F6F6F4;">})</span></span></code></pre></div><blockquote><p>组合 api 的优势</p><ul><li>优化逻辑</li><li>抽离功能模块</li></ul></blockquote>`,27)]))}const i=a(p,[["render",l]]),d=JSON.parse(`{"path":"/docs/learning/frontend/Vue3.x.html","title":"Vue3.x","lang":"zh-CN","frontmatter":{"description":"Vue3.x 搭建 模板语法 v-text 绑定文本 v-for = \\"item,index in list\\" 生命周期 beforeCreate 没有数据，方法 created 有数据，方法，没挂载-无 dom beforeMount 有数据，方法，没挂载-无 dom mounted 有数据，有 dom 自定义指令 v-name 组件化和模块化 组件...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue3.x\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoSheBRO\\"}]}"],["meta",{"property":"og:url","content":"https://XiaoSheBRO.github.io/docs/learning/frontend/Vue3.x.html"}],["meta",{"property":"og:site_name","content":"Shaw's Book"}],["meta",{"property":"og:title","content":"Vue3.x"}],["meta",{"property":"og:description","content":"Vue3.x 搭建 模板语法 v-text 绑定文本 v-for = \\"item,index in list\\" 生命周期 beforeCreate 没有数据，方法 created 有数据，方法，没挂载-无 dom beforeMount 有数据，方法，没挂载-无 dom mounted 有数据，有 dom 自定义指令 v-name 组件化和模块化 组件..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":1.24,"words":247},"filePathRelative":"docs/learning/frontend/Vue3.x.md","autoDesc":true,"excerpt":"\\n<h2>搭建</h2>\\n<h2>模板语法</h2>\\n<p><code>v-text</code> 绑定文本<br>\\n<code>v-for = \\"item,index in list\\"</code></p>\\n<h2>生命周期</h2>\\n<p>beforeCreate 没有数据，方法<br>\\ncreated 有数据，方法，没挂载-无 dom<br>\\nbeforeMount 有数据，方法，没挂载-无 dom<br>\\nmounted 有数据，有 dom</p>\\n<h2>自定义指令 <code>v-name</code></h2>\\n<div class=\\"language-js\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" style=\\"background-color:#282A36;color:#f6f6f4\\"><pre class=\\"shiki dracula-soft vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#F6F6F4\\">app.</span><span style=\\"color:#62E884\\">directive</span><span style=\\"color:#F6F6F4\\">(</span><span style=\\"color:#DEE492\\">\\"</span><span style=\\"color:#E7EE98\\">name</span><span style=\\"color:#DEE492\\">\\"</span><span style=\\"color:#F6F6F4\\">, {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#62E884\\">  生命周期函数</span><span style=\\"color:#F6F6F4\\">(</span><span style=\\"color:#FFB86C;font-style:italic\\">原生dom节点</span><span style=\\"color:#F6F6F4\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F286C4\\">    ...</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F6F6F4\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F6F6F4\\">})</span></span></code></pre>\\n</div>"}`);export{i as comp,d as data};
