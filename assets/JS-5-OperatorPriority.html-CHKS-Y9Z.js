import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a,f as n,e as p,o as e}from"./app-Bw-jT3D9.js";const t={};function c(r,s){return e(),o("div",null,[s[0]||(s[0]=a("h1",{id:"运算符优先级",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#运算符优先级"},[a("span",null,"运算符优先级")])],-1)),n(" #region demo "),s[1]||(s[1]=p(`<details class="hint-container details"><summary>📝 练习：运算符优先级</summary><div class="language-js" data-highlighter="shiki" data-ext="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code class="language-js"><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> x </span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;"> 1</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> y </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> x</span><span style="color:#F286C4;">++</span><span style="color:#F286C4;"> +</span><span style="color:#BF9EEE;"> 1</span><span style="color:#7B7F8B;"> // 1 + 1</span></span>
<span class="line"><span style="color:#F6F6F4;">console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(y) </span><span style="color:#7B7F8B;">// 2</span></span>
<span class="line"><span style="color:#F6F6F4;">console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(x) </span><span style="color:#7B7F8B;">// 2</span></span></code></pre></div><div class="language-js" data-highlighter="shiki" data-ext="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code class="language-js"><span class="line"><span style="color:#F286C4;">typeof</span><span style="color:#BF9EEE;"> 1</span><span style="color:#F286C4;"> /</span><span style="color:#BF9EEE;"> 0</span><span style="color:#7B7F8B;"> // typeof 优先级高于 /</span></span>
<span class="line"><span style="color:#7B7F8B;">// &quot;number&quot; / 0</span></span>
<span class="line"><span style="color:#7B7F8B;">// NaN / 0</span></span>
<span class="line"><span style="color:#7B7F8B;">// NaN</span></span></code></pre></div><div class="language-js" data-highlighter="shiki" data-ext="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code class="language-js"><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> x </span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;"> 1</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> y </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> x </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> x</span><span style="color:#F286C4;">++</span><span style="color:#F286C4;"> *</span><span style="color:#F286C4;"> ++</span><span style="color:#F6F6F4;">x </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> x</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + x++ * ++x + x</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + 1 * ++x + x // x ==&gt; 2</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + 1 * 3 + x // x ==&gt; 3</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + 3 + x</span></span>
<span class="line"><span style="color:#7B7F8B;">// 4 + x</span></span>
<span class="line"><span style="color:#7B7F8B;">// 7</span></span></code></pre></div><div class="language-js" data-highlighter="shiki" data-ext="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code class="language-js"><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> x </span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;"> 1</span></span>
<span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> y </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> x </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> x</span><span style="color:#F286C4;">++</span><span style="color:#F286C4;"> *</span><span style="color:#F6F6F4;"> (x </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> x </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> x</span><span style="color:#F286C4;">++</span><span style="color:#F286C4;"> *</span><span style="color:#F286C4;"> ++</span><span style="color:#F6F6F4;">x) </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> x</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + x++ * (x = x + x++ * ++x) + x</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + 1 * (x = x + x++ * ++x) + x // x ==&gt; 2</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + 1 * (x = 2 + x++ * ++x) + x</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + 1 * (x = 2 + 2 * ++x) + x // x ==&gt; 3</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + 1 * (x = 2 + 2 * 4) + x // x ==&gt; 4</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + 1 * (x = 2 + 8) + x</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + 1 * (x = 10) + x</span></span>
<span class="line"><span style="color:#7B7F8B;">// 1 + 10 + x // x ==&gt; 10</span></span>
<span class="line"><span style="color:#7B7F8B;">// 11 + x</span></span>
<span class="line"><span style="color:#7B7F8B;">// 21</span></span></code></pre></div></details>`,1)),n(" #endregion demo ")])}const y=l(t,[["render",c]]),d=JSON.parse(`{"path":"/docs/demo/JS-5-OperatorPriority.html","title":"运算符优先级","lang":"zh-CN","frontmatter":{"description":"运算符优先级 📝 练习：运算符优先级","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"运算符优先级\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoSheBRO\\"}]}"],["meta",{"property":"og:url","content":"https://XiaoSheBRO.github.io/docs/demo/JS-5-OperatorPriority.html"}],["meta",{"property":"og:site_name","content":"Shaw's Book"}],["meta",{"property":"og:title","content":"运算符优先级"}],["meta",{"property":"og:description","content":"运算符优先级 📝 练习：运算符优先级"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":0.94,"words":188},"filePathRelative":"docs/_demo/JS-5-OperatorPriority.md","autoDesc":true}`);export{y as comp,d as data};
