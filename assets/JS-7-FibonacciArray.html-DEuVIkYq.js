import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a,f as n,e as p,o as e}from"./app-Bw-jT3D9.js";const t={};function r(c,s){return e(),l("div",null,[s[0]||(s[0]=a("h1",{id:"斐波那契数组",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#斐波那契数组"},[a("span",null,"斐波那契数组")])],-1)),n(" #region demo "),s[1]||(s[1]=p(`<details class="hint-container details"><summary>📝 练习：斐波那契数组</summary><p>生成给定长度的斐波那契数组</p><div class="language-js" data-highlighter="shiki" data-ext="js" style="background-color:#282A36;color:#f6f6f4;"><pre class="shiki dracula-soft vp-code"><code class="language-js"><span class="line"><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> len </span><span style="color:#F286C4;">=</span><span style="color:#F286C4;"> +</span><span style="color:#62E884;">prompt</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">请输入斐波那契数组长度：</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F286C4;">if</span><span style="color:#F6F6F4;"> (</span><span style="color:#62E884;">isNaN</span><span style="color:#F6F6F4;">(len) </span><span style="color:#F286C4;">||</span><span style="color:#F6F6F4;"> len </span><span style="color:#F286C4;">&lt;</span><span style="color:#BF9EEE;"> 0</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#62E884;">  alert</span><span style="color:#F6F6F4;">(</span><span style="color:#DEE492;">&#39;</span><span style="color:#E7EE98;">请输入正整数！</span><span style="color:#DEE492;">&#39;</span><span style="color:#F6F6F4;">)</span></span>
<span class="line"><span style="color:#F6F6F4;">} </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F286C4;">  var</span><span style="color:#F6F6F4;"> arr </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> []</span></span>
<span class="line"><span style="color:#F286C4;">  for</span><span style="color:#F6F6F4;"> (</span><span style="color:#F286C4;">var</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;"> 0</span><span style="color:#F6F6F4;">; i </span><span style="color:#F286C4;">&lt;</span><span style="color:#F6F6F4;"> len; i</span><span style="color:#F286C4;">++</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F286C4;">    if</span><span style="color:#F6F6F4;"> (i </span><span style="color:#F286C4;">===</span><span style="color:#BF9EEE;"> 0</span><span style="color:#F286C4;"> ||</span><span style="color:#F6F6F4;"> i </span><span style="color:#F286C4;">===</span><span style="color:#BF9EEE;"> 1</span><span style="color:#F6F6F4;">) {</span></span>
<span class="line"><span style="color:#F6F6F4;">      arr[i] </span><span style="color:#F286C4;">=</span><span style="color:#BF9EEE;"> 1</span></span>
<span class="line"><span style="color:#F6F6F4;">    } </span><span style="color:#F286C4;">else</span><span style="color:#F6F6F4;"> {</span></span>
<span class="line"><span style="color:#F6F6F4;">      arr[i] </span><span style="color:#F286C4;">=</span><span style="color:#F6F6F4;"> arr[i </span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;"> 1</span><span style="color:#F6F6F4;">] </span><span style="color:#F286C4;">+</span><span style="color:#F6F6F4;"> arr[i </span><span style="color:#F286C4;">-</span><span style="color:#BF9EEE;"> 2</span><span style="color:#F6F6F4;">]</span></span>
<span class="line"><span style="color:#F6F6F4;">    }</span></span>
<span class="line"><span style="color:#F6F6F4;">  }</span></span>
<span class="line"><span style="color:#F6F6F4;">  console.</span><span style="color:#62E884;">log</span><span style="color:#F6F6F4;">(arr)</span></span>
<span class="line"><span style="color:#F6F6F4;">}</span></span></code></pre></div></details>`,1)),n(" #endregion demo ")])}const i=o(t,[["render",r]]),d=JSON.parse(`{"path":"/docs/demo/JS-7-FibonacciArray.html","title":"斐波那契数组","lang":"zh-CN","frontmatter":{"description":"斐波那契数组 📝 练习：斐波那契数组 生成给定长度的斐波那契数组","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"斐波那契数组\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoSheBRO\\"}]}"],["meta",{"property":"og:url","content":"https://XiaoSheBRO.github.io/docs/demo/JS-7-FibonacciArray.html"}],["meta",{"property":"og:site_name","content":"Shaw's Book"}],["meta",{"property":"og:title","content":"斐波那契数组"}],["meta",{"property":"og:description","content":"斐波那契数组 📝 练习：斐波那契数组 生成给定长度的斐波那契数组"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":0.44,"words":88},"filePathRelative":"docs/_demo/JS-7-FibonacciArray.md","autoDesc":true}`);export{i as comp,d as data};
